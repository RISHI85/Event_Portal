{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nconst useAuthStore = create((set, get) => ({\n  user: null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  setUser: user => set({\n    user\n  }),\n  setToken: token => {\n    if (token) localStorage.setItem('token', token);else localStorage.removeItem('token');\n    set({\n      token,\n      isAuthenticated: !!token\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n  },\n  register: async payload => {\n    set({\n      loading: true\n    });\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/register', payload);\n      toast.success('Registered. Check email for OTP.');\n      return data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Registration failed');\n      throw err;\n    } finally {\n      set({\n        loading: false\n      });\n    }\n  },\n  login: async ({\n    email,\n    password\n  }) => {\n    set({\n      loading: true\n    });\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      toast.success('OTP sent to email');\n      return data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      toast.error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'Login failed');\n      throw err;\n    } finally {\n      set({\n        loading: false\n      });\n    }\n  },\n  verifyOtp: async ({\n    email,\n    otp\n  }) => {\n    set({\n      loading: true\n    });\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/verify-otp', {\n        email,\n        otp\n      });\n      set({\n        user: data.user\n      });\n      get().setToken(data.token);\n      toast.success('Logged in successfully');\n      return data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      toast.error(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.msg) || 'OTP verification failed');\n      throw err;\n    } finally {\n      set({\n        loading: false\n      });\n    }\n  }\n}));\nexport default useAuthStore;","map":{"version":3,"names":["create","axios","toast","useAuthStore","set","get","user","token","localStorage","getItem","isAuthenticated","loading","setUser","setToken","setItem","removeItem","logout","register","payload","data","post","success","err","_err$response","_err$response$data","error","response","msg","login","email","password","_err$response2","_err$response2$data","verifyOtp","otp","_err$response3","_err$response3$data"],"sources":["C:/Users/sairi/Desktop/main_project/frontend/src/store/authStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst useAuthStore = create((set, get) => ({\n  user: null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n\n  setUser: (user) => set({ user }),\n  setToken: (token) => {\n    if (token) localStorage.setItem('token', token);\n    else localStorage.removeItem('token');\n    set({ token, isAuthenticated: !!token });\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    set({ user: null, token: null, isAuthenticated: false });\n  },\n\n  register: async (payload) => {\n    set({ loading: true });\n    try {\n      const { data } = await axios.post('/api/auth/register', payload);\n      toast.success('Registered. Check email for OTP.');\n      return data;\n    } catch (err) {\n      toast.error(err.response?.data?.msg || 'Registration failed');\n      throw err;\n    } finally {\n      set({ loading: false });\n    }\n  },\n\n  login: async ({ email, password }) => {\n    set({ loading: true });\n    try {\n      const { data } = await axios.post('/api/auth/login', { email, password });\n      toast.success('OTP sent to email');\n      return data;\n    } catch (err) {\n      toast.error(err.response?.data?.msg || 'Login failed');\n      throw err;\n    } finally {\n      set({ loading: false });\n    }\n  },\n\n  verifyOtp: async ({ email, otp }) => {\n    set({ loading: true });\n    try {\n      const { data } = await axios.post('/api/auth/verify-otp', { email, otp });\n      set({ user: data.user });\n      get().setToken(data.token);\n      toast.success('Logged in successfully');\n      return data;\n    } catch (err) {\n      toast.error(err.response?.data?.msg || 'OTP verification failed');\n      throw err;\n    } finally {\n      set({ loading: false });\n    }\n  },\n}));\n\nexport default useAuthStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}