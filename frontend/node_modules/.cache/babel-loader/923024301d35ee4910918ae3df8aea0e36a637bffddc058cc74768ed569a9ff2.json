{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\Desktop\\\\main_project\\\\frontend\\\\src\\\\components\\\\CircularGallery.jsx\",\n  _s = $RefreshSig$();\nimport { Camera, Mesh, Plane, Program, Renderer, Texture, Transform } from 'ogl';\nimport { useEffect, useRef } from 'react';\nimport './CircularGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\nfunction lerp(p1, p2, t) {\n  return p1 + (p2 - p1) * t;\n}\nfunction autoBind(instance) {\n  const proto = Object.getPrototypeOf(instance);\n  Object.getOwnPropertyNames(proto).forEach(key => {\n    if (key !== 'constructor' && typeof instance[key] === 'function') {\n      instance[key] = instance[key].bind(instance);\n    }\n  });\n}\nfunction createTextTexture(gl, text, font = 'bold 30px monospace', color = 'black') {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text);\n  const textWidth = Math.ceil(metrics.width);\n  const textHeight = Math.ceil(parseInt(font, 10) * 1.2);\n  canvas.width = textWidth + 20;\n  canvas.height = textHeight + 20;\n  context.font = font;\n  context.fillStyle = color;\n  context.textBaseline = 'middle';\n  context.textAlign = 'center';\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.fillText(text, canvas.width / 2, canvas.height / 2);\n  const texture = new Texture(gl, {\n    generateMipmaps: false\n  });\n  texture.image = canvas;\n  return {\n    texture,\n    width: canvas.width,\n    height: canvas.height\n  };\n}\nclass Title {\n  constructor({\n    gl,\n    plane,\n    renderer,\n    text,\n    textColor = '#545050',\n    font = '30px sans-serif'\n  }) {\n    autoBind(this);\n    this.gl = gl;\n    this.plane = plane;\n    this.renderer = renderer;\n    this.text = text;\n    this.textColor = textColor;\n    this.font = font;\n    this.createMesh();\n  }\n  createMesh() {\n    const {\n      texture,\n      width,\n      height\n    } = createTextTexture(this.gl, this.text, this.font, this.textColor);\n    const geometry = new Plane(this.gl);\n    const program = new Program(this.gl, {\n      vertex: `\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform sampler2D tMap;\n        varying vec2 vUv;\n        void main() {\n          vec4 color = texture2D(tMap, vUv);\n          if (color.a < 0.1) discard;\n          gl_FragColor = color;\n        }\n      `,\n      uniforms: {\n        tMap: {\n          value: texture\n        }\n      },\n      transparent: true\n    });\n    this.mesh = new Mesh(this.gl, {\n      geometry,\n      program\n    });\n    const aspect = width / height;\n    const textHeight = this.plane.scale.y * 0.15;\n    const textWidth = textHeight * aspect;\n    this.mesh.scale.set(textWidth, textHeight, 1);\n    this.mesh.position.y = -this.plane.scale.y * 0.5 - textHeight * 0.5 - 0.05;\n    this.mesh.setParent(this.plane);\n  }\n}\nclass Media {\n  constructor({\n    geometry,\n    gl,\n    image,\n    index,\n    length,\n    renderer,\n    scene,\n    screen,\n    text,\n    viewport,\n    bend,\n    textColor,\n    borderRadius = 0,\n    font\n  }) {\n    this.extra = 0;\n    this.geometry = geometry;\n    this.gl = gl;\n    this.image = image;\n    this.index = index;\n    this.length = length;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.screen = screen;\n    this.text = text;\n    this.viewport = viewport;\n    this.bend = bend;\n    this.textColor = textColor;\n    this.borderRadius = borderRadius;\n    this.font = font;\n    this.createShader();\n    this.createMesh();\n    this.createTitle();\n    this.onResize();\n  }\n  createShader() {\n    const texture = new Texture(this.gl, {\n      generateMipmaps: true\n    });\n    this.program = new Program(this.gl, {\n      depthTest: false,\n      depthWrite: false,\n      vertex: `\n        precision highp float;\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        uniform float uTime;\n        uniform float uSpeed;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          vec3 p = position;\n          p.z = (sin(p.x * 4.0 + uTime) * 1.5 + cos(p.y * 2.0 + uTime) * 1.5) * (0.1 + uSpeed * 0.5);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform vec2 uImageSizes;\n        uniform vec2 uPlaneSizes;\n        uniform sampler2D tMap;\n        uniform float uBorderRadius;\n        varying vec2 vUv;\n        \n        float roundedBoxSDF(vec2 p, vec2 b, float r) {\n          vec2 d = abs(p) - b;\n          return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0) - r;\n        }\n        \n        void main() {\n          vec2 ratio = vec2(\n            min((uPlaneSizes.x / uPlaneSizes.y) / (uImageSizes.x / uImageSizes.y), 1.0),\n            min((uPlaneSizes.y / uPlaneSizes.x) / (uImageSizes.y / uImageSizes.x), 1.0)\n          );\n          vec2 uv = vec2(\n            vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\n            vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\n          );\n          vec4 color = texture2D(tMap, uv);\n          \n          float d = roundedBoxSDF(vUv - 0.5, vec2(0.5 - uBorderRadius), uBorderRadius);\n          \n          // Smooth antialiasing for edges\n          float edgeSmooth = 0.002;\n          float alpha = 1.0 - smoothstep(-edgeSmooth, edgeSmooth, d);\n          \n          gl_FragColor = vec4(color.rgb, alpha);\n        }\n      `,\n      uniforms: {\n        tMap: {\n          value: texture\n        },\n        uPlaneSizes: {\n          value: [0, 0]\n        },\n        uImageSizes: {\n          value: [0, 0]\n        },\n        uSpeed: {\n          value: 0\n        },\n        uTime: {\n          value: 100 * Math.random()\n        },\n        uBorderRadius: {\n          value: this.borderRadius\n        }\n      },\n      transparent: true\n    });\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.src = this.image;\n    img.onload = () => {\n      texture.image = img;\n      this.program.uniforms.uImageSizes.value = [img.naturalWidth, img.naturalHeight];\n    };\n  }\n  createMesh() {\n    this.plane = new Mesh(this.gl, {\n      geometry: this.geometry,\n      program: this.program\n    });\n    this.plane.setParent(this.scene);\n  }\n  createTitle() {\n    this.title = new Title({\n      gl: this.gl,\n      plane: this.plane,\n      renderer: this.renderer,\n      text: this.text,\n      textColor: this.textColor,\n      fontFamily: this.font\n    });\n  }\n  update(scroll, direction) {\n    this.plane.position.x = this.x - scroll.current - this.extra;\n    const x = this.plane.position.x;\n    const H = this.viewport.width / 2;\n    if (this.bend === 0) {\n      this.plane.position.y = 0;\n      this.plane.rotation.z = 0;\n    } else {\n      const B_abs = Math.abs(this.bend);\n      const R = (H * H + B_abs * B_abs) / (2 * B_abs);\n      const effectiveX = Math.min(Math.abs(x), H);\n      const arc = R - Math.sqrt(R * R - effectiveX * effectiveX);\n      if (this.bend > 0) {\n        this.plane.position.y = -arc;\n        this.plane.rotation.z = -Math.sign(x) * Math.asin(effectiveX / R);\n      } else {\n        this.plane.position.y = arc;\n        this.plane.rotation.z = Math.sign(x) * Math.asin(effectiveX / R);\n      }\n    }\n    this.speed = scroll.current - scroll.last;\n    this.program.uniforms.uTime.value += 0.04;\n    this.program.uniforms.uSpeed.value = this.speed;\n    const planeOffset = this.plane.scale.x / 2;\n    const viewportOffset = this.viewport.width / 2;\n    this.isBefore = this.plane.position.x + planeOffset < -viewportOffset;\n    this.isAfter = this.plane.position.x - planeOffset > viewportOffset;\n    if (direction === 'right' && this.isBefore) {\n      this.extra -= this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n    if (direction === 'left' && this.isAfter) {\n      this.extra += this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n  }\n  onResize({\n    screen,\n    viewport\n  } = {}) {\n    if (screen) this.screen = screen;\n    if (viewport) {\n      this.viewport = viewport;\n      if (this.plane.program.uniforms.uViewportSizes) {\n        this.plane.program.uniforms.uViewportSizes.value = [this.viewport.width, this.viewport.height];\n      }\n    }\n    this.scale = this.screen.height / 1500;\n    this.plane.scale.y = this.viewport.height * (900 * this.scale) / this.screen.height;\n    this.plane.scale.x = this.viewport.width * (700 * this.scale) / this.screen.width;\n    this.plane.program.uniforms.uPlaneSizes.value = [this.plane.scale.x, this.plane.scale.y];\n    this.padding = 2;\n    this.width = this.plane.scale.x + this.padding;\n    this.widthTotal = this.width * this.length;\n    this.x = this.width * this.index;\n  }\n}\nclass App {\n  constructor(container, {\n    items,\n    bend,\n    textColor = '#ffffff',\n    borderRadius = 0,\n    font = 'bold 30px Figtree',\n    scrollSpeed = 2,\n    scrollEase = 0.05\n  } = {}) {\n    document.documentElement.classList.remove('no-js');\n    this.container = container;\n    this.scrollSpeed = scrollSpeed;\n    this.scroll = {\n      ease: scrollEase,\n      current: 0,\n      target: 0,\n      last: 0\n    };\n    this.onCheckDebounce = debounce(this.onCheck, 200);\n    this.createRenderer();\n    this.createCamera();\n    this.createScene();\n    this.onResize();\n    this.createGeometry();\n    this.createMedias(items, bend, textColor, borderRadius, font);\n    this.update();\n    this.addEventListeners();\n  }\n  createRenderer() {\n    this.renderer = new Renderer({\n      alpha: true,\n      antialias: true,\n      dpr: Math.min(window.devicePixelRatio || 1, 2)\n    });\n    this.gl = this.renderer.gl;\n    this.gl.clearColor(0, 0, 0, 0);\n    this.container.appendChild(this.gl.canvas);\n  }\n  createCamera() {\n    this.camera = new Camera(this.gl);\n    this.camera.fov = 45;\n    this.camera.position.z = 20;\n  }\n  createScene() {\n    this.scene = new Transform();\n  }\n  createGeometry() {\n    this.planeGeometry = new Plane(this.gl, {\n      heightSegments: 50,\n      widthSegments: 100\n    });\n  }\n  createMedias(items, bend = 1, textColor, borderRadius, font) {\n    const defaultItems = [{\n      image: `https://picsum.photos/seed/1/800/600?grayscale`,\n      text: 'Bridge'\n    }, {\n      image: `https://picsum.photos/seed/2/800/600?grayscale`,\n      text: 'Desk Setup'\n    }, {\n      image: `https://picsum.photos/seed/3/800/600?grayscale`,\n      text: 'Waterfall'\n    }, {\n      image: `https://picsum.photos/seed/4/800/600?grayscale`,\n      text: 'Strawberries'\n    }, {\n      image: `https://picsum.photos/seed/5/800/600?grayscale`,\n      text: 'Deep Diving'\n    }, {\n      image: `https://picsum.photos/seed/16/800/600?grayscale`,\n      text: 'Train Track'\n    }, {\n      image: `https://picsum.photos/seed/17/800/600?grayscale`,\n      text: 'Santorini'\n    }, {\n      image: `https://picsum.photos/seed/8/800/600?grayscale`,\n      text: 'Blurry Lights'\n    }, {\n      image: `https://picsum.photos/seed/9/800/600?grayscale`,\n      text: 'New York'\n    }, {\n      image: `https://picsum.photos/seed/10/800/600?grayscale`,\n      text: 'Good Boy'\n    }, {\n      image: `https://picsum.photos/seed/21/800/600?grayscale`,\n      text: 'Coastline'\n    }, {\n      image: `https://picsum.photos/seed/12/800/600?grayscale`,\n      text: 'Palm Trees'\n    }];\n    const galleryItems = items && items.length ? items : defaultItems;\n    this.mediasImages = galleryItems.concat(galleryItems);\n    this.medias = this.mediasImages.map((data, index) => {\n      return new Media({\n        geometry: this.planeGeometry,\n        gl: this.gl,\n        image: data.image,\n        index,\n        length: this.mediasImages.length,\n        renderer: this.renderer,\n        scene: this.scene,\n        screen: this.screen,\n        text: data.text,\n        viewport: this.viewport,\n        bend,\n        textColor,\n        borderRadius,\n        font\n      });\n    });\n  }\n  onTouchDown(e) {\n    this.isDown = true;\n    this.scroll.position = this.scroll.current;\n    this.start = e.touches ? e.touches[0].clientX : e.clientX;\n  }\n  onTouchMove(e) {\n    if (!this.isDown) return;\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\n    const distance = (this.start - x) * (this.scrollSpeed * 0.025);\n    this.scroll.target = this.scroll.position + distance;\n  }\n  onTouchUp() {\n    this.isDown = false;\n    this.onCheck();\n  }\n  onWheel(e) {\n    const delta = e.deltaY || e.wheelDelta || e.detail;\n    this.scroll.target += (delta > 0 ? this.scrollSpeed : -this.scrollSpeed) * 0.2;\n    this.onCheckDebounce();\n  }\n  onCheck() {\n    if (!this.medias || !this.medias[0]) return;\n    const width = this.medias[0].width;\n    const itemIndex = Math.round(Math.abs(this.scroll.target) / width);\n    const item = width * itemIndex;\n    this.scroll.target = this.scroll.target < 0 ? -item : item;\n  }\n  onResize() {\n    this.screen = {\n      width: this.container.clientWidth,\n      height: this.container.clientHeight\n    };\n    this.renderer.setSize(this.screen.width, this.screen.height);\n    this.camera.perspective({\n      aspect: this.screen.width / this.screen.height\n    });\n    const fov = this.camera.fov * Math.PI / 180;\n    const height = 2 * Math.tan(fov / 2) * this.camera.position.z;\n    const width = height * this.camera.aspect;\n    this.viewport = {\n      width,\n      height\n    };\n    if (this.medias) {\n      this.medias.forEach(media => media.onResize({\n        screen: this.screen,\n        viewport: this.viewport\n      }));\n    }\n  }\n  update() {\n    this.scroll.current = lerp(this.scroll.current, this.scroll.target, this.scroll.ease);\n    const direction = this.scroll.current > this.scroll.last ? 'right' : 'left';\n    if (this.medias) {\n      this.medias.forEach(media => media.update(this.scroll, direction));\n    }\n    this.renderer.render({\n      scene: this.scene,\n      camera: this.camera\n    });\n    this.scroll.last = this.scroll.current;\n    this.raf = window.requestAnimationFrame(this.update.bind(this));\n  }\n  addEventListeners() {\n    this.boundOnResize = this.onResize.bind(this);\n    this.boundOnWheel = this.onWheel.bind(this);\n    this.boundOnTouchDown = this.onTouchDown.bind(this);\n    this.boundOnTouchMove = this.onTouchMove.bind(this);\n    this.boundOnTouchUp = this.onTouchUp.bind(this);\n    window.addEventListener('resize', this.boundOnResize);\n    window.addEventListener('mousewheel', this.boundOnWheel);\n    window.addEventListener('wheel', this.boundOnWheel);\n    window.addEventListener('mousedown', this.boundOnTouchDown);\n    window.addEventListener('mousemove', this.boundOnTouchMove);\n    window.addEventListener('mouseup', this.boundOnTouchUp);\n    window.addEventListener('touchstart', this.boundOnTouchDown);\n    window.addEventListener('touchmove', this.boundOnTouchMove);\n    window.addEventListener('touchend', this.boundOnTouchUp);\n  }\n  destroy() {\n    window.cancelAnimationFrame(this.raf);\n    window.removeEventListener('resize', this.boundOnResize);\n    window.removeEventListener('mousewheel', this.boundOnWheel);\n    window.removeEventListener('wheel', this.boundOnWheel);\n    window.removeEventListener('mousedown', this.boundOnTouchDown);\n    window.removeEventListener('mousemove', this.boundOnTouchMove);\n    window.removeEventListener('mouseup', this.boundOnTouchUp);\n    window.removeEventListener('touchstart', this.boundOnTouchDown);\n    window.removeEventListener('touchmove', this.boundOnTouchMove);\n    window.removeEventListener('touchend', this.boundOnTouchUp);\n    if (this.renderer && this.renderer.gl && this.renderer.gl.canvas.parentNode) {\n      this.renderer.gl.canvas.parentNode.removeChild(this.renderer.gl.canvas);\n    }\n  }\n}\nexport default function CircularGallery({\n  items,\n  bend = 3,\n  textColor = '#ffffff',\n  borderRadius = 0.05,\n  font = 'bold 30px Figtree',\n  scrollSpeed = 2,\n  scrollEase = 0.05\n}) {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const app = new App(containerRef.current, {\n      items,\n      bend,\n      textColor,\n      borderRadius,\n      font,\n      scrollSpeed,\n      scrollEase\n    });\n    return () => {\n      app.destroy();\n    };\n  }, [items, bend, textColor, borderRadius, font, scrollSpeed, scrollEase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circular-gallery\",\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 10\n  }, this);\n}\n_s(CircularGallery, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = CircularGallery;\nvar _c;\n$RefreshReg$(_c, \"CircularGallery\");","map":{"version":3,"names":["Camera","Mesh","Plane","Program","Renderer","Texture","Transform","useEffect","useRef","jsxDEV","_jsxDEV","debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","lerp","p1","p2","t","autoBind","instance","proto","Object","getPrototypeOf","getOwnPropertyNames","forEach","key","bind","createTextTexture","gl","text","font","color","canvas","document","createElement","context","getContext","metrics","measureText","textWidth","Math","ceil","width","textHeight","parseInt","height","fillStyle","textBaseline","textAlign","clearRect","fillText","texture","generateMipmaps","image","Title","constructor","plane","renderer","textColor","createMesh","geometry","program","vertex","fragment","uniforms","tMap","value","transparent","mesh","aspect","scale","y","set","position","setParent","Media","index","length","scene","screen","viewport","bend","borderRadius","extra","createShader","createTitle","onResize","depthTest","depthWrite","uPlaneSizes","uImageSizes","uSpeed","uTime","random","uBorderRadius","img","Image","crossOrigin","src","onload","naturalWidth","naturalHeight","title","fontFamily","update","scroll","direction","x","current","H","rotation","z","B_abs","abs","R","effectiveX","min","arc","sqrt","sign","asin","speed","last","planeOffset","viewportOffset","isBefore","isAfter","widthTotal","uViewportSizes","padding","App","container","items","scrollSpeed","scrollEase","documentElement","classList","remove","ease","target","onCheckDebounce","onCheck","createRenderer","createCamera","createScene","createGeometry","createMedias","addEventListeners","alpha","antialias","dpr","window","devicePixelRatio","clearColor","appendChild","camera","fov","planeGeometry","heightSegments","widthSegments","defaultItems","galleryItems","mediasImages","concat","medias","map","data","onTouchDown","e","isDown","start","touches","clientX","onTouchMove","distance","onTouchUp","onWheel","delta","deltaY","wheelDelta","detail","itemIndex","round","item","clientWidth","clientHeight","setSize","perspective","PI","tan","media","render","raf","requestAnimationFrame","boundOnResize","boundOnWheel","boundOnTouchDown","boundOnTouchMove","boundOnTouchUp","addEventListener","destroy","cancelAnimationFrame","removeEventListener","parentNode","removeChild","CircularGallery","_s","containerRef","app","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sairi/Desktop/main_project/frontend/src/components/CircularGallery.jsx"],"sourcesContent":["import { Camera, Mesh, Plane, Program, Renderer, Texture, Transform } from 'ogl';\nimport { useEffect, useRef } from 'react';\n\nimport './CircularGallery.css';\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\nfunction lerp(p1, p2, t) {\n  return p1 + (p2 - p1) * t;\n}\n\nfunction autoBind(instance) {\n  const proto = Object.getPrototypeOf(instance);\n  Object.getOwnPropertyNames(proto).forEach(key => {\n    if (key !== 'constructor' && typeof instance[key] === 'function') {\n      instance[key] = instance[key].bind(instance);\n    }\n  });\n}\n\nfunction createTextTexture(gl, text, font = 'bold 30px monospace', color = 'black') {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text);\n  const textWidth = Math.ceil(metrics.width);\n  const textHeight = Math.ceil(parseInt(font, 10) * 1.2);\n  canvas.width = textWidth + 20;\n  canvas.height = textHeight + 20;\n  context.font = font;\n  context.fillStyle = color;\n  context.textBaseline = 'middle';\n  context.textAlign = 'center';\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.fillText(text, canvas.width / 2, canvas.height / 2);\n  const texture = new Texture(gl, { generateMipmaps: false });\n  texture.image = canvas;\n  return { texture, width: canvas.width, height: canvas.height };\n}\n\nclass Title {\n  constructor({ gl, plane, renderer, text, textColor = '#545050', font = '30px sans-serif' }) {\n    autoBind(this);\n    this.gl = gl;\n    this.plane = plane;\n    this.renderer = renderer;\n    this.text = text;\n    this.textColor = textColor;\n    this.font = font;\n    this.createMesh();\n  }\n  createMesh() {\n    const { texture, width, height } = createTextTexture(this.gl, this.text, this.font, this.textColor);\n    const geometry = new Plane(this.gl);\n    const program = new Program(this.gl, {\n      vertex: `\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform sampler2D tMap;\n        varying vec2 vUv;\n        void main() {\n          vec4 color = texture2D(tMap, vUv);\n          if (color.a < 0.1) discard;\n          gl_FragColor = color;\n        }\n      `,\n      uniforms: { tMap: { value: texture } },\n      transparent: true\n    });\n    this.mesh = new Mesh(this.gl, { geometry, program });\n    const aspect = width / height;\n    const textHeight = this.plane.scale.y * 0.15;\n    const textWidth = textHeight * aspect;\n    this.mesh.scale.set(textWidth, textHeight, 1);\n    this.mesh.position.y = -this.plane.scale.y * 0.5 - textHeight * 0.5 - 0.05;\n    this.mesh.setParent(this.plane);\n  }\n}\n\nclass Media {\n  constructor({\n    geometry,\n    gl,\n    image,\n    index,\n    length,\n    renderer,\n    scene,\n    screen,\n    text,\n    viewport,\n    bend,\n    textColor,\n    borderRadius = 0,\n    font\n  }) {\n    this.extra = 0;\n    this.geometry = geometry;\n    this.gl = gl;\n    this.image = image;\n    this.index = index;\n    this.length = length;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.screen = screen;\n    this.text = text;\n    this.viewport = viewport;\n    this.bend = bend;\n    this.textColor = textColor;\n    this.borderRadius = borderRadius;\n    this.font = font;\n    this.createShader();\n    this.createMesh();\n    this.createTitle();\n    this.onResize();\n  }\n  createShader() {\n    const texture = new Texture(this.gl, {\n      generateMipmaps: true\n    });\n    this.program = new Program(this.gl, {\n      depthTest: false,\n      depthWrite: false,\n      vertex: `\n        precision highp float;\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        uniform float uTime;\n        uniform float uSpeed;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          vec3 p = position;\n          p.z = (sin(p.x * 4.0 + uTime) * 1.5 + cos(p.y * 2.0 + uTime) * 1.5) * (0.1 + uSpeed * 0.5);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform vec2 uImageSizes;\n        uniform vec2 uPlaneSizes;\n        uniform sampler2D tMap;\n        uniform float uBorderRadius;\n        varying vec2 vUv;\n        \n        float roundedBoxSDF(vec2 p, vec2 b, float r) {\n          vec2 d = abs(p) - b;\n          return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0) - r;\n        }\n        \n        void main() {\n          vec2 ratio = vec2(\n            min((uPlaneSizes.x / uPlaneSizes.y) / (uImageSizes.x / uImageSizes.y), 1.0),\n            min((uPlaneSizes.y / uPlaneSizes.x) / (uImageSizes.y / uImageSizes.x), 1.0)\n          );\n          vec2 uv = vec2(\n            vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\n            vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\n          );\n          vec4 color = texture2D(tMap, uv);\n          \n          float d = roundedBoxSDF(vUv - 0.5, vec2(0.5 - uBorderRadius), uBorderRadius);\n          \n          // Smooth antialiasing for edges\n          float edgeSmooth = 0.002;\n          float alpha = 1.0 - smoothstep(-edgeSmooth, edgeSmooth, d);\n          \n          gl_FragColor = vec4(color.rgb, alpha);\n        }\n      `,\n      uniforms: {\n        tMap: { value: texture },\n        uPlaneSizes: { value: [0, 0] },\n        uImageSizes: { value: [0, 0] },\n        uSpeed: { value: 0 },\n        uTime: { value: 100 * Math.random() },\n        uBorderRadius: { value: this.borderRadius }\n      },\n      transparent: true\n    });\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.src = this.image;\n    img.onload = () => {\n      texture.image = img;\n      this.program.uniforms.uImageSizes.value = [img.naturalWidth, img.naturalHeight];\n    };\n  }\n  createMesh() {\n    this.plane = new Mesh(this.gl, {\n      geometry: this.geometry,\n      program: this.program\n    });\n    this.plane.setParent(this.scene);\n  }\n  createTitle() {\n    this.title = new Title({\n      gl: this.gl,\n      plane: this.plane,\n      renderer: this.renderer,\n      text: this.text,\n      textColor: this.textColor,\n      fontFamily: this.font\n    });\n  }\n  update(scroll, direction) {\n    this.plane.position.x = this.x - scroll.current - this.extra;\n\n    const x = this.plane.position.x;\n    const H = this.viewport.width / 2;\n\n    if (this.bend === 0) {\n      this.plane.position.y = 0;\n      this.plane.rotation.z = 0;\n    } else {\n      const B_abs = Math.abs(this.bend);\n      const R = (H * H + B_abs * B_abs) / (2 * B_abs);\n      const effectiveX = Math.min(Math.abs(x), H);\n\n      const arc = R - Math.sqrt(R * R - effectiveX * effectiveX);\n      if (this.bend > 0) {\n        this.plane.position.y = -arc;\n        this.plane.rotation.z = -Math.sign(x) * Math.asin(effectiveX / R);\n      } else {\n        this.plane.position.y = arc;\n        this.plane.rotation.z = Math.sign(x) * Math.asin(effectiveX / R);\n      }\n    }\n\n    this.speed = scroll.current - scroll.last;\n    this.program.uniforms.uTime.value += 0.04;\n    this.program.uniforms.uSpeed.value = this.speed;\n\n    const planeOffset = this.plane.scale.x / 2;\n    const viewportOffset = this.viewport.width / 2;\n    this.isBefore = this.plane.position.x + planeOffset < -viewportOffset;\n    this.isAfter = this.plane.position.x - planeOffset > viewportOffset;\n    if (direction === 'right' && this.isBefore) {\n      this.extra -= this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n    if (direction === 'left' && this.isAfter) {\n      this.extra += this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n  }\n  onResize({ screen, viewport } = {}) {\n    if (screen) this.screen = screen;\n    if (viewport) {\n      this.viewport = viewport;\n      if (this.plane.program.uniforms.uViewportSizes) {\n        this.plane.program.uniforms.uViewportSizes.value = [this.viewport.width, this.viewport.height];\n      }\n    }\n    this.scale = this.screen.height / 1500;\n    this.plane.scale.y = (this.viewport.height * (900 * this.scale)) / this.screen.height;\n    this.plane.scale.x = (this.viewport.width * (700 * this.scale)) / this.screen.width;\n    this.plane.program.uniforms.uPlaneSizes.value = [this.plane.scale.x, this.plane.scale.y];\n    this.padding = 2;\n    this.width = this.plane.scale.x + this.padding;\n    this.widthTotal = this.width * this.length;\n    this.x = this.width * this.index;\n  }\n}\n\nclass App {\n  constructor(\n    container,\n    {\n      items,\n      bend,\n      textColor = '#ffffff',\n      borderRadius = 0,\n      font = 'bold 30px Figtree',\n      scrollSpeed = 2,\n      scrollEase = 0.05\n    } = {}\n  ) {\n    document.documentElement.classList.remove('no-js');\n    this.container = container;\n    this.scrollSpeed = scrollSpeed;\n    this.scroll = { ease: scrollEase, current: 0, target: 0, last: 0 };\n    this.onCheckDebounce = debounce(this.onCheck, 200);\n    this.createRenderer();\n    this.createCamera();\n    this.createScene();\n    this.onResize();\n    this.createGeometry();\n    this.createMedias(items, bend, textColor, borderRadius, font);\n    this.update();\n    this.addEventListeners();\n  }\n  createRenderer() {\n    this.renderer = new Renderer({\n      alpha: true,\n      antialias: true,\n      dpr: Math.min(window.devicePixelRatio || 1, 2)\n    });\n    this.gl = this.renderer.gl;\n    this.gl.clearColor(0, 0, 0, 0);\n    this.container.appendChild(this.gl.canvas);\n  }\n  createCamera() {\n    this.camera = new Camera(this.gl);\n    this.camera.fov = 45;\n    this.camera.position.z = 20;\n  }\n  createScene() {\n    this.scene = new Transform();\n  }\n  createGeometry() {\n    this.planeGeometry = new Plane(this.gl, {\n      heightSegments: 50,\n      widthSegments: 100\n    });\n  }\n  createMedias(items, bend = 1, textColor, borderRadius, font) {\n    const defaultItems = [\n      { image: `https://picsum.photos/seed/1/800/600?grayscale` , text: 'Bridge' },\n      { image: `https://picsum.photos/seed/2/800/600?grayscale` , text: 'Desk Setup' },\n      { image: `https://picsum.photos/seed/3/800/600?grayscale` , text: 'Waterfall' },\n      { image: `https://picsum.photos/seed/4/800/600?grayscale` , text: 'Strawberries' },\n      { image: `https://picsum.photos/seed/5/800/600?grayscale` , text: 'Deep Diving' },\n      { image: `https://picsum.photos/seed/16/800/600?grayscale` , text: 'Train Track' },\n      { image: `https://picsum.photos/seed/17/800/600?grayscale` , text: 'Santorini' },\n      { image: `https://picsum.photos/seed/8/800/600?grayscale` , text: 'Blurry Lights' },\n      { image: `https://picsum.photos/seed/9/800/600?grayscale` , text: 'New York' },\n      { image: `https://picsum.photos/seed/10/800/600?grayscale` , text: 'Good Boy' },\n      { image: `https://picsum.photos/seed/21/800/600?grayscale` , text: 'Coastline' },\n      { image: `https://picsum.photos/seed/12/800/600?grayscale` , text: 'Palm Trees' }\n    ];\n    const galleryItems = items && items.length ? items : defaultItems;\n    this.mediasImages = galleryItems.concat(galleryItems);\n    this.medias = this.mediasImages.map((data, index) => {\n      return new Media({\n        geometry: this.planeGeometry,\n        gl: this.gl,\n        image: data.image,\n        index,\n        length: this.mediasImages.length,\n        renderer: this.renderer,\n        scene: this.scene,\n        screen: this.screen,\n        text: data.text,\n        viewport: this.viewport,\n        bend,\n        textColor,\n        borderRadius,\n        font\n      });\n    });\n  }\n  onTouchDown(e) {\n    this.isDown = true;\n    this.scroll.position = this.scroll.current;\n    this.start = e.touches ? e.touches[0].clientX : e.clientX;\n  }\n  onTouchMove(e) {\n    if (!this.isDown) return;\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\n    const distance = (this.start - x) * (this.scrollSpeed * 0.025);\n    this.scroll.target = this.scroll.position + distance;\n  }\n  onTouchUp() {\n    this.isDown = false;\n    this.onCheck();\n  }\n  onWheel(e) {\n    const delta = e.deltaY || e.wheelDelta || e.detail;\n    this.scroll.target += (delta > 0 ? this.scrollSpeed : -this.scrollSpeed) * 0.2;\n    this.onCheckDebounce();\n  }\n  onCheck() {\n    if (!this.medias || !this.medias[0]) return;\n    const width = this.medias[0].width;\n    const itemIndex = Math.round(Math.abs(this.scroll.target) / width);\n    const item = width * itemIndex;\n    this.scroll.target = this.scroll.target < 0 ? -item : item;\n  }\n  onResize() {\n    this.screen = {\n      width: this.container.clientWidth,\n      height: this.container.clientHeight\n    };\n    this.renderer.setSize(this.screen.width, this.screen.height);\n    this.camera.perspective({\n      aspect: this.screen.width / this.screen.height\n    });\n    const fov = (this.camera.fov * Math.PI) / 180;\n    const height = 2 * Math.tan(fov / 2) * this.camera.position.z;\n    const width = height * this.camera.aspect;\n    this.viewport = { width, height };\n    if (this.medias) {\n      this.medias.forEach(media => media.onResize({ screen: this.screen, viewport: this.viewport }));\n    }\n  }\n  update() {\n    this.scroll.current = lerp(this.scroll.current, this.scroll.target, this.scroll.ease);\n    const direction = this.scroll.current > this.scroll.last ? 'right' : 'left';\n    if (this.medias) {\n      this.medias.forEach(media => media.update(this.scroll, direction));\n    }\n    this.renderer.render({ scene: this.scene, camera: this.camera });\n    this.scroll.last = this.scroll.current;\n    this.raf = window.requestAnimationFrame(this.update.bind(this));\n  }\n  addEventListeners() {\n    this.boundOnResize = this.onResize.bind(this);\n    this.boundOnWheel = this.onWheel.bind(this);\n    this.boundOnTouchDown = this.onTouchDown.bind(this);\n    this.boundOnTouchMove = this.onTouchMove.bind(this);\n    this.boundOnTouchUp = this.onTouchUp.bind(this);\n    window.addEventListener('resize', this.boundOnResize);\n    window.addEventListener('mousewheel', this.boundOnWheel);\n    window.addEventListener('wheel', this.boundOnWheel);\n    window.addEventListener('mousedown', this.boundOnTouchDown);\n    window.addEventListener('mousemove', this.boundOnTouchMove);\n    window.addEventListener('mouseup', this.boundOnTouchUp);\n    window.addEventListener('touchstart', this.boundOnTouchDown);\n    window.addEventListener('touchmove', this.boundOnTouchMove);\n    window.addEventListener('touchend', this.boundOnTouchUp);\n  }\n  destroy() {\n    window.cancelAnimationFrame(this.raf);\n    window.removeEventListener('resize', this.boundOnResize);\n    window.removeEventListener('mousewheel', this.boundOnWheel);\n    window.removeEventListener('wheel', this.boundOnWheel);\n    window.removeEventListener('mousedown', this.boundOnTouchDown);\n    window.removeEventListener('mousemove', this.boundOnTouchMove);\n    window.removeEventListener('mouseup', this.boundOnTouchUp);\n    window.removeEventListener('touchstart', this.boundOnTouchDown);\n    window.removeEventListener('touchmove', this.boundOnTouchMove);\n    window.removeEventListener('touchend', this.boundOnTouchUp);\n    if (this.renderer && this.renderer.gl && this.renderer.gl.canvas.parentNode) {\n      this.renderer.gl.canvas.parentNode.removeChild(this.renderer.gl.canvas);\n    }\n  }\n}\n\nexport default function CircularGallery({\n  items,\n  bend = 3,\n  textColor = '#ffffff',\n  borderRadius = 0.05,\n  font = 'bold 30px Figtree',\n  scrollSpeed = 2,\n  scrollEase = 0.05\n}) {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const app = new App(containerRef.current, { items, bend, textColor, borderRadius, font, scrollSpeed, scrollEase });\n    return () => {\n      app.destroy();\n    };\n  }, [items, bend, textColor, borderRadius, font, scrollSpeed, scrollEase]);\n  return <div className=\"circular-gallery\" ref={containerRef} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}