{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\Desktop\\\\main_project\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport useAuthStore from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuthStore();\n  if (!isAuthenticated) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 32\n  }, this);\n  return children;\n};\n_s(ProtectedRoute, \"3lj5uG6xHIV1uLZ3pMJuafwGAeQ=\", false, function () {\n  return [useAuthStore];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuthStore","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sairi/Desktop/main_project/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport useAuthStore from '../store/authStore';\n\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated } = useAuthStore();\n  if (!isAuthenticated) return <Navigate to=\"/auth\" />;\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAgB,CAAC,GAAGN,YAAY,CAAC,CAAC;EAC1C,IAAI,CAACM,eAAe,EAAE,oBAAOJ,OAAA,CAACH,QAAQ;IAACQ,EAAE,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACpD,OAAOP,QAAQ;AACjB,CAAC;AAACC,EAAA,CAJIF,cAAc;EAAA,QACUH,YAAY;AAAA;AAAAY,EAAA,GADpCT,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}