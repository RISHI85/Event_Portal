{"ast":null,"code":"import axios from 'axios';\nimport useAuthStore from '../store/authStore';\nconst api = axios.create({});\napi.interceptors.request.use(config => {\n  const {\n    token\n  } = useAuthStore.getState();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auto-logout on 401 / expired token\napi.interceptors.response.use(res => {\n  return res;\n}, err => {\n  var _err$response, _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n  const status = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;\n  const msg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.msg) || '';\n  if (status === 401 || /jwt expired/i.test(msg)) {\n    const {\n      logout\n    } = useAuthStore.getState();\n    logout();\n    // Best-effort redirect for SPA\n    if (typeof window !== 'undefined') {\n      window.location.href = '/auth';\n    }\n  }\n  return Promise.reject(err);\n});\nexport default api;","map":{"version":3,"names":["axios","useAuthStore","api","create","interceptors","request","use","config","token","getState","headers","Authorization","response","res","err","_err$response","_err$response2","_err$response2$data","_err$response3","_err$response3$data","status","msg","data","message","test","logout","window","location","href","Promise","reject"],"sources":["C:/Users/sairi/Desktop/main_project/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport useAuthStore from '../store/authStore';\n\nconst api = axios.create({});\n\napi.interceptors.request.use((config) => {\n  const { token } = useAuthStore.getState();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auto-logout on 401 / expired token\napi.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (err) => {\n    const status = err.response?.status;\n    const msg = err.response?.data?.message || err.response?.data?.msg || '';\n    if (status === 401 || /jwt expired/i.test(msg)) {\n      const { logout } = useAuthStore.getState();\n      logout();\n      // Best-effort redirect for SPA\n      if (typeof window !== 'undefined') {\n        window.location.href = '/auth';\n      }\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,oBAAoB;AAE7C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;AAE5BD,GAAG,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAM;IAAEC;EAAM,CAAC,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;EACzC,IAAID,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACE,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BO,GAAG,IAAK;EACP,OAAOA,GAAG;AACZ,CAAC,EACAC,GAAG,IAAK;EAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,mBAAA,EAAAC,cAAA,EAAAC,mBAAA;EACP,MAAMC,MAAM,IAAAL,aAAA,GAAGD,GAAG,CAACF,QAAQ,cAAAG,aAAA,uBAAZA,aAAA,CAAcK,MAAM;EACnC,MAAMC,GAAG,GAAG,EAAAL,cAAA,GAAAF,GAAG,CAACF,QAAQ,cAAAI,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcM,IAAI,cAAAL,mBAAA,uBAAlBA,mBAAA,CAAoBM,OAAO,OAAAL,cAAA,GAAIJ,GAAG,CAACF,QAAQ,cAAAM,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcI,IAAI,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBE,GAAG,KAAI,EAAE;EACxE,IAAID,MAAM,KAAK,GAAG,IAAI,cAAc,CAACI,IAAI,CAACH,GAAG,CAAC,EAAE;IAC9C,MAAM;MAAEI;IAAO,CAAC,GAAGxB,YAAY,CAACQ,QAAQ,CAAC,CAAC;IAC1CgB,MAAM,CAAC,CAAC;IACR;IACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACjCA,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;IAChC;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAAChB,GAAG,CAAC;AAC5B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}