{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\Desktop\\\\main_project\\\\frontend\\\\src\\\\pages\\\\CertificateView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CertificateTemplate from '../components/CertificateTemplate';\nimport './CertificateView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificateView = () => {\n  _s();\n  const navigate = useNavigate();\n  const [certData, setCertData] = useState(null);\n  useEffect(() => {\n    // Get certificate data from sessionStorage\n    const data = sessionStorage.getItem('certificateData');\n    if (data) {\n      try {\n        setCertData(JSON.parse(data));\n      } catch (e) {\n        console.error('Failed to parse certificate data', e);\n        navigate('/my-events');\n      }\n    } else {\n      navigate('/my-events');\n    }\n  }, [navigate]);\n  if (!certData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading certificate...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-view-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificate-view-container\",\n      children: /*#__PURE__*/_jsxDEV(CertificateTemplate, {\n        participantName: certData.participantName,\n        teamName: certData.teamName,\n        eventName: certData.eventName,\n        dateText: certData.dateText,\n        organizerText: certData.organizerText,\n        awardText: certData.awardText,\n        accentColor: '#111827',\n        primaryColor: '#2563EB',\n        bgPattern: '',\n        issuerName: 'GMRIT',\n        logoUrl: '',\n        headerLogoUrl: '/images/gmrit_logo.png',\n        showSeal: true,\n        sealSize: 84,\n        sealText: 'Official',\n        downloadBaseName: `${certData.eventName.replace(/\\s+/g, '_')}_${certData.participantName.replace(/\\s+/g, '_')}`,\n        certificateId: certData.certificateId,\n        verifyUrl: '',\n        eventTimings: certData.eventTimings,\n        courseMeta: {\n          level: ''\n        },\n        leftSigner: {\n          name: certData.leftSigner,\n          title: 'Instructor / Director'\n        },\n        rightSigner: {\n          name: certData.rightSigner,\n          title: 'Registrar / Authorized Signatory'\n        },\n        showQR: false,\n        showActions: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificateView, \"lfIvmUmrPhlbpfLgdN0Ln9WTlIw=\", false, function () {\n  return [useNavigate];\n});\n_c = CertificateView;\nexport default CertificateView;\nvar _c;\n$RefreshReg$(_c, \"CertificateView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","CertificateTemplate","jsxDEV","_jsxDEV","CertificateView","_s","navigate","certData","setCertData","data","sessionStorage","getItem","JSON","parse","e","console","error","style","display","alignItems","justifyContent","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","participantName","teamName","eventName","dateText","organizerText","awardText","accentColor","primaryColor","bgPattern","issuerName","logoUrl","headerLogoUrl","showSeal","sealSize","sealText","downloadBaseName","replace","certificateId","verifyUrl","eventTimings","courseMeta","level","leftSigner","name","title","rightSigner","showQR","showActions","_c","$RefreshReg$"],"sources":["C:/Users/sairi/Desktop/main_project/frontend/src/pages/CertificateView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CertificateTemplate from '../components/CertificateTemplate';\nimport './CertificateView.css';\n\nconst CertificateView = () => {\n  const navigate = useNavigate();\n  const [certData, setCertData] = useState(null);\n\n  useEffect(() => {\n    // Get certificate data from sessionStorage\n    const data = sessionStorage.getItem('certificateData');\n    if (data) {\n      try {\n        setCertData(JSON.parse(data));\n      } catch (e) {\n        console.error('Failed to parse certificate data', e);\n        navigate('/my-events');\n      }\n    } else {\n      navigate('/my-events');\n    }\n  }, [navigate]);\n\n  if (!certData) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '100vh' }}>\n        <p>Loading certificate...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"certificate-view-page\">\n      <div className=\"certificate-view-container\">\n        <CertificateTemplate\n          participantName={certData.participantName}\n          teamName={certData.teamName}\n          eventName={certData.eventName}\n          dateText={certData.dateText}\n          organizerText={certData.organizerText}\n          awardText={certData.awardText}\n          accentColor={'#111827'}\n          primaryColor={'#2563EB'}\n          bgPattern={''}\n          issuerName={'GMRIT'}\n          logoUrl={''}\n          headerLogoUrl={'/images/gmrit_logo.png'}\n          showSeal={true}\n          sealSize={84}\n          sealText={'Official'}\n          downloadBaseName={`${certData.eventName.replace(/\\s+/g,'_')}_${certData.participantName.replace(/\\s+/g,'_')}`}\n          certificateId={certData.certificateId}\n          verifyUrl={''}\n          eventTimings={certData.eventTimings}\n          courseMeta={{ level: '' }}\n          leftSigner={{ name: certData.leftSigner, title: 'Instructor / Director' }}\n          rightSigner={{ name: certData.rightSigner, title: 'Registrar / Authorized Signatory' }}\n          showQR={false}\n          showActions={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CertificateView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}